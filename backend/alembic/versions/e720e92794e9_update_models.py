"""update models

Revision ID: e720e92794e9
Revises: 2fabaefc6947
Create Date: 2024-12-30 20:10:55.036763

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = "e720e92794e9"
down_revision: Union[str, None] = "2fabaefc6947"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "instruction_step",
        sa.Column("text", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("recipe_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["recipe_id"],
            ["recipe.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "recipe_ingredient_link",
        sa.Column("recipe_id", sa.Integer(), nullable=False),
        sa.Column("ingredient_id", sa.Integer(), nullable=False),
        sa.Column("amount", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.ForeignKeyConstraint(
            ["ingredient_id"],
            ["ingredient.id"],
        ),
        sa.ForeignKeyConstraint(
            ["recipe_id"],
            ["recipe.id"],
        ),
        sa.PrimaryKeyConstraint("recipe_id", "ingredient_id"),
    )
    op.create_table(
        "image_link",
        sa.Column("width", sa.Integer(), nullable=False),
        sa.Column("url", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("ingredient_id", sa.Integer(), nullable=True),
        sa.Column("instruction_step_id", sa.Integer(), nullable=True),
        sa.Column("recipe_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["ingredient_id"],
            ["ingredient.id"],
        ),
        sa.ForeignKeyConstraint(
            ["instruction_step_id"],
            ["instruction_step.id"],
        ),
        sa.ForeignKeyConstraint(
            ["recipe_id"],
            ["recipe.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.add_column(
        "recipe", sa.Column("title", sqlmodel.sql.sqltypes.AutoString(), nullable=False)
    )
    op.add_column(
        "recipe", sa.Column("slug", sqlmodel.sql.sqltypes.AutoString(), nullable=False)
    )
    op.add_column(
        "recipe",
        sa.Column("gousto_uid", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    )
    op.add_column("recipe", sa.Column("rating", sa.Float(), nullable=True))
    op.add_column("recipe", sa.Column("prep_time", sa.Integer(), nullable=True))
    op.add_column("recipe", sa.Column("basic_ingredients", sa.JSON(), nullable=True))
    op.drop_column("recipe", "name")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "recipe", sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False)
    )
    op.drop_column("recipe", "basic_ingredients")
    op.drop_column("recipe", "prep_time")
    op.drop_column("recipe", "rating")
    op.drop_column("recipe", "gousto_uid")
    op.drop_column("recipe", "slug")
    op.drop_column("recipe", "title")
    op.drop_table("image_link")
    op.drop_table("recipe_ingredient_link")
    op.drop_table("instruction_step")
    # ### end Alembic commands ###
